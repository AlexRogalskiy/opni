---
apiVersion: v1
kind: Namespace
metadata:
  name: nfd-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nfd
  namespace: nfd-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nfd
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  # when using command line flag --resource-labels to create extended resources
  # you will need to uncomment "- nodes/status"
  # - nodes/status
  verbs:
  - get
  - patch
  - update
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nfd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nfd
subjects:
- kind: ServiceAccount
  name: nfd
  namespace: nfd-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nfd-worker-conf
  namespace: nfd-system
data:
  nfd-worker.conf: |-
    sources:
        pci:
          deviceLabelFields:
          - vendor
---
apiVersion: v1
kind: Service
metadata:
  name: nfd-master
  namespace: nfd-system
  labels:
    app: nfd
    role: master
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app: nfd
    role: master
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  nfd-master
  namespace: nfd-system
  labels:
    app: nfd
    role: master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfd
      role: master
  template:
    metadata:
      labels:
        app: nfd
        role: master
    spec:
      serviceAccountName: nfd
      containers:
        - name: master
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          image: "k8s.gcr.io/nfd/node-feature-discovery:v0.8.2"
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8080
            name: grpc
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          command:
            - "nfd-master"
          args:
            - "--extra-label-ns=nvidia.com"
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: In
                values:
                - ""
            weight: 1
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: ""
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name:  nfd-worker
  namespace: nfd-system
  labels:
    app: nfd
    role: worker
spec:
  selector:
    matchLabels:
      app: nfd
      role: worker
  template:
    metadata:
      labels:
        app: nfd
        role: worker
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: worker
        securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
        image: "k8s.gcr.io/nfd/node-feature-discovery:v0.8.2"
        imagePullPolicy: IfNotPresent
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        command:
        - "nfd-worker"
        args:
        - "--sleep-interval=60s"
        - "--server=nfd-master:8080"
        volumeMounts:
        - name: host-boot
          mountPath: "/host-boot"
          readOnly: true
        - name: host-os-release
          mountPath: "/host-etc/os-release"
          readOnly: true
        - name: host-sys
          mountPath: "/host-sys"
          readOnly: true
        - name: source-d
          mountPath: "/etc/kubernetes/node-feature-discovery/source.d/"
          readOnly: true
        - name: features-d
          mountPath: "/etc/kubernetes/node-feature-discovery/features.d/"
          readOnly: true
        - name: nfd-worker-conf
          mountPath: "/etc/kubernetes/node-feature-discovery"
          readOnly: true
      volumes:
        - name: host-boot
          hostPath:
            path: "/boot"
        - name: host-os-release
          hostPath:
            path: "/etc/os-release"
        - name: host-sys
          hostPath:
            path: "/sys"
        - name: source-d
          hostPath:
            path: "/etc/kubernetes/node-feature-discovery/source.d/"
        - name: features-d
          hostPath:
            path: "/etc/kubernetes/node-feature-discovery/features.d/"
        - name: nfd-worker-conf
          configMap:
            name: nfd-worker-conf
            items:
              - key: nfd-worker.conf
                path: nfd-worker.conf
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: ""
        - effect: NoSchedule
          key: nvidia.com/gpu
          operator: Equal
          value: present